name: Deploy Cloud Functions

on:
  push :
    branches: [main]
    paths:
    - 'functions/**'
    
  workflow_dispatch:   
    
env:
  PROJECT: ${{secrets.GC_PROJECT_ID}}
          
jobs:
  get_movies_function_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1.1.1
      with:
        project_id: ${{env.PROJECT}}
        credentials_json: ${{secrets.GCLOUD_AUTH}}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1

    - name: Deploy Get Movies function
      run: > 
        gcloud
        functions
        deploy
        get-movies-func
        --region=europe-north1
        --runtime=java17
        --gen2
        --trigger-http   
        --source=./functions/get-movies-func
        --entry-point=getmovies.GetMovies
        --set-env-vars TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}


  search_movie_function_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1.1.1
      with:
        project_id: ${{env.PROJECT}}
        credentials_json: ${{secrets.GCLOUD_AUTH}}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1

    - name: Deploy Cloud Search Function
      run: |
        gcloud functions deploy search-movie-func \
          --entry-point searchmovie.SearchMovie \
          --source=./functions/search-movie-func \
          --runtime java17 \
          --trigger-http \
          --region europe-north1 \
          --project ${{ secrets.GC_PROJECT_ID }} \
          --gen2 \
          --set-env-vars TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}  # Set the environment variable

  store_users_neo4j_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Cloud StoreUser in Neo4j Function
        run: |
          gcloud functions deploy store_users_neo4j_func \
            --entry-point storeusersneo4j.StoreUsersNeo4j \
            --source=./functions/store-users-neo4j-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars NEO4J_URI=${{ secrets.NEO4J_URI }} \
            --set-env-vars NEO4J_USER=${{ secrets.NEO4J_USER }} \
            --set-env-vars NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}
            
  get_cast_and_trailer_function_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1.1.1
      with:
        project_id: ${{env.PROJECT}}
        credentials_json: ${{secrets.GCLOUD_AUTH}}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1

    - name: Deploy Get Cast and Trailer function
      run: > 
        gcloud
        functions
        deploy
        get-cast-and-trailer-func
        --region=europe-north1
        --runtime=java17
        --gen2
        --trigger-http   
        --source=./functions/get-cast-and-trailer-func
        --entry-point=getcastandtrailer.GetCastAndTrailer
        --set-env-vars TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}

  movie_lists_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Cloud Movie Lists Function
        run: |
          gcloud functions deploy movie-lists-func \
            --entry-point movielists.MovieLists \
            --source=./functions/movie-lists-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars NEO4J_URI=${{ secrets.NEO4J_URI }} \
            --set-env-vars NEO4J_USER=${{ secrets.NEO4J_USER }} \
            --set-env-vars NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}

  retreive_lists_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Retrieve Lists Function
        run: |
          gcloud functions deploy retreive-lists-func \
            --entry-point retreivelists.RetrieveLists \
            --source=./functions/retreive-lists-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars NEO4J_URI=${{ secrets.NEO4J_URI }} \
            --set-env-vars NEO4J_USER=${{ secrets.NEO4J_USER }} \
            --set-env-vars NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }} \
            --set-env-vars TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}

  comment_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Retrieve Lists Function
        run: |
          gcloud functions deploy comment-func \
            --entry-point comment.Comment \
            --source=./functions/comment-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars NEO4J_URI=${{ secrets.NEO4J_URI }} \
            --set-env-vars NEO4J_USER=${{ secrets.NEO4J_USER }} \
            --set-env-vars NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}    

  get_delete_comments_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Retrieve Lists Function
        run: |
          gcloud functions deploy get-delete-comments-func \
            --entry-point getdeletecomments.GetDeleteComments \
            --source=./functions/get-delete-comments-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars NEO4J_URI=${{ secrets.NEO4J_URI }} \
            --set-env-vars NEO4J_USER=${{ secrets.NEO4J_USER }} \
            --set-env-vars NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}  

  random_movies_function_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          project_id: ${{env.PROJECT}}
          credentials_json: ${{secrets.GCLOUD_AUTH}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Deploy Cloud Random Movies Function
        run: |
          gcloud functions deploy random-movies-func \
            --entry-point randommovies.RandomMovies \
            --source=./functions/random-movies-func \
            --runtime java17 \
            --trigger-http \
            --region europe-north1 \
            --project ${{ secrets.GC_PROJECT_ID }} \
            --gen2 \
            --set-env-vars TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}